name: PR Verification

on:
  pull_request:
    branches: [main, develop]

jobs:
  verify:
    name: Lint • Typecheck • Test • Build (affected)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Restore Nx cache
        uses: actions/cache@v4
        with:
          path: tmp/nx-cache
          key: ${{ runner.os }}-nx-${{ hashFiles('pnpm-lock.yaml', 'nx.json') }}
          restore-keys: |
            ${{ runner.os }}-nx-

      - name: Export Nx Cloud token
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          NX_TOKEN="$(gh variable get NX_CLOUD_ACCESS_TOKEN -R \"$GITHUB_REPOSITORY\" --json value --jq '.value' 2>/dev/null || true)"
          if [ -n "$NX_TOKEN" ]; then
            echo "NX_CLOUD_ACCESS_TOKEN=$NX_TOKEN" >> "$GITHUB_ENV"
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: 22.20.0
          cache: pnpm

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.18.2

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Detect documentation changes
        id: docs_changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            docs:
              - 'docs/**/*.md'
              - 'docs/**/*.mdx'
              - '*.md'
              - 'packages/**/README.md'

      - name: Lint (affected)
        run: pnpm nx affected -t lint --parallel=4

      - name: Typecheck (affected)
        id: typecheck_affected
        run: pnpm nx affected -t typecheck --parallel=3
        continue-on-error: true

      - name: Typecheck fallback (sequential)
        if: steps.typecheck_affected.outcome == 'failure'
        run: pnpm typecheck

      - name: Unit tests (affected)
        run: pnpm nx affected -t test --parallel=3

      - name: Build (affected)
        run: pnpm nx affected -t build --parallel=3

      - name: Markdown lint (docs only)
        if: ${{ steps.docs_changes.outputs.docs == 'true' }}
        run: pnpm lint:md
