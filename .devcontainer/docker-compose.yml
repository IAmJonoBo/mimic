version: '3.8'

services:
  workspace:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ..:/workspace:cached
      - node_modules:/workspace/node_modules
      - pnpm_store:/workspace/.pnpm-store
    command: sleep infinity
    environment:
      - PNPM_HOME=/usr/local/bin
    depends_on:
      - penpot-db
      - penpot-redis
      - penpot-backend
      - penpot-frontend
      - ollama
    networks:
      - mimic-dev

  # Penpot self-hosted setup
  penpot-db:
    image: postgres:17
    restart: always
    stop_signal: SIGINT
    environment:
      POSTGRES_INITDB_ARGS: --data-checksums
      POSTGRES_DB: penpot
      POSTGRES_USER: penpot
      POSTGRES_PASSWORD: penpot
    volumes:
      - penpot_postgres_v15:/var/lib/postgresql/data
    networks:
      - mimic-dev

  penpot-redis:
    image: redis:8
    restart: always
    networks:
      - mimic-dev

  penpot-backend:
    image: penpotapp/backend:2.7.2
    restart: always
    volumes:
      - penpot_assets:/opt/data/assets
    depends_on:
      - penpot-db
      - penpot-redis
    environment:
      PENPOT_FLAGS: enable-registration enable-login-with-password disable-email-verification enable-smtp enable-prepl-server
      # trunk-ignore(checkov/CKV_SECRET_6): Development placeholder
      PENPOT_SECRET_KEY: dev-secret-key
      PENPOT_PREPL_HOST: 0.0.0.0
      PENPOT_DATABASE_URI: postgresql://penpot-db/penpot
      PENPOT_DATABASE_USERNAME: penpot
      PENPOT_DATABASE_PASSWORD: penpot
      PENPOT_REDIS_URI: redis://penpot-redis/0
      PENPOT_ASSETS_STORAGE_BACKEND: assets-fs
      PENPOT_STORAGE_ASSETS_FS_DIRECTORY: /opt/data/assets
      PENPOT_TELEMETRY_ENABLED: false
      PENPOT_SMTP_DEFAULT_FROM: no-reply@example.com
      PENPOT_SMTP_DEFAULT_REPLY_TO: no-reply@example.com
      PENPOT_SMTP_HOST: penpot-mailcatch
      PENPOT_SMTP_PORT: 1025
      PENPOT_SMTP_USERNAME: ''
      PENPOT_SMTP_PASSWORD: ''
      PENPOT_SMTP_TLS: false
      PENPOT_SMTP_SSL: 'false'
    networks:
      - mimic-dev

  penpot-frontend:
    image: penpotapp/frontend:2.7.2
    restart: always
    ports:
      - 9001:80
    depends_on:
      - penpot-backend
    environment:
      PENPOT_FLAGS: enable-registration enable-login-with-password disable-email-verification enable-smtp disable-demo-users
    networks:
      - mimic-dev

  # Ollama for local AI
  ollama:
    image: ollama/ollama:latest
    restart: always
    ports:
      - 11434:11434
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_KEEP_ALIVE=24h
    networks:
      - mimic-dev

  # Penpot token export automation
  penpot-export:
    image: ghcr.io/penpot/penpot-export:latest
    container_name: mimic-penpot-export
    volumes:
      - ../packages/design-tokens/tokens:/out
      - ../tools/penpot-export:/workspace
    working_dir: /workspace
    environment:
      # Set these in your .env file or GitHub Secrets for CI
      - PENPOT_FILE_ID=${PENPOT_FILE_ID:-}
      - PENPOT_ACCESS_TOKEN=${PENPOT_ACCESS_TOKEN:-}
      - PENPOT_TEAM_ID=${PENPOT_TEAM_ID:-}
    command: >
      sh -c "
        echo 'Starting Penpot token export...' &&
        penpot-export
          --file $$PENPOT_FILE_ID
          --token $$PENPOT_ACCESS_TOKEN
          --team $$PENPOT_TEAM_ID
          --out /out/base.json
          --format dtcg &&
        echo 'Export completed successfully!'
      "
    profiles:
      - penpot-sync
    networks:
      - mimic-dev

volumes:
  node_modules:
  pnpm_store:
  penpot_postgres_v15:
  penpot_assets:
  ollama_data:

networks:
  mimic-dev:
    driver: bridge
